<?php
/**
 * MediaCacheConfig3Test
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.14
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * MediaCacheConfig3Test Class Doc Comment
 *
 * @category    Class
 * @description MediaCacheConfig3
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MediaCacheConfig3Test extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MediaCacheConfig3"
     */
    public function testMediaCacheConfig3()
    {
    }

    /**
     * Test attribute "max_pending_write_request_size_auto_value"
     */
    public function testPropertyMaxPendingWriteRequestSizeAutoValue()
    {
    }

    /**
     * Test attribute "sources"
     */
    public function testPropertySources()
    {
    }

    /**
     * Test attribute "stores"
     */
    public function testPropertyStores()
    {
    }

    /**
     * Test attribute "server_name"
     */
    public function testPropertyServerName()
    {
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
    }

    /**
     * Test attribute "max_pending_read_ahead_request_size_auto_value"
     */
    public function testPropertyMaxPendingReadAheadRequestSizeAutoValue()
    {
    }

    /**
     * Test attribute "read_ahead_thread_pool_size_auto_value"
     */
    public function testPropertyReadAheadThreadPoolSizeAutoValue()
    {
    }

    /**
     * Test attribute "read_ahead_thread_pool_size"
     */
    public function testPropertyReadAheadThreadPoolSize()
    {
    }

    /**
     * Test attribute "max_pending_read_ahead_request_size"
     */
    public function testPropertyMaxPendingReadAheadRequestSize()
    {
    }

    /**
     * Test attribute "save_field_list"
     */
    public function testPropertySaveFieldList()
    {
    }

    /**
     * Test attribute "max_pending_write_request_size"
     */
    public function testPropertyMaxPendingWriteRequestSize()
    {
    }

    /**
     * Test attribute "writer_thread_pool_size_auto_value"
     */
    public function testPropertyWriterThreadPoolSizeAutoValue()
    {
    }

    /**
     * Test attribute "writer_thread_pool_size"
     */
    public function testPropertyWriterThreadPoolSize()
    {
    }
}
