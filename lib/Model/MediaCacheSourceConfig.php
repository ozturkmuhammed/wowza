<?php
/**
 * MediaCacheSourceConfig
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.14
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * MediaCacheSourceConfig Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MediaCacheSourceConfig implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MediaCacheSourceConfig';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'reader_class' => 'string',
        'is_pass_thru' => 'bool',
        'min_time_to_live' => 'int',
        'prefix' => 'string',
        'server_name' => 'string',
        'description' => 'string',
        'base_class' => 'string',
        'type' => 'string',
        'is_amazon_s3' => 'bool',
        's3_bucket_name_ın_domain' => 'bool',
        'google_service_private_key_file' => 'string',
        'google_service_ıd' => 'string',
        'google_service_private_key_password' => 'string',
        'save_field_list' => 'string[]',
        'azure_account_key' => 'string',
        'aws_secret_access_key' => 'string',
        'azure_account_name' => 'string',
        'aws_access_key_ıd' => 'string',
        'http_reader_factory_class' => 'string',
        'google_service_key' => 'string',
        'azure_container_name' => 'string',
        'version' => 'string',
        'base_path' => 'string',
        'google_enc_method' => 'string',
        'name' => 'string',
        'max_time_to_live' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'reader_class' => null,
        'is_pass_thru' => null,
        'min_time_to_live' => 'int64',
        'prefix' => null,
        'server_name' => null,
        'description' => null,
        'base_class' => null,
        'type' => null,
        'is_amazon_s3' => null,
        's3_bucket_name_ın_domain' => null,
        'google_service_private_key_file' => null,
        'google_service_ıd' => null,
        'google_service_private_key_password' => null,
        'save_field_list' => null,
        'azure_account_key' => null,
        'aws_secret_access_key' => null,
        'azure_account_name' => null,
        'aws_access_key_ıd' => null,
        'http_reader_factory_class' => null,
        'google_service_key' => null,
        'azure_container_name' => null,
        'version' => null,
        'base_path' => null,
        'google_enc_method' => null,
        'name' => null,
        'max_time_to_live' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'reader_class' => 'readerClass',
        'is_pass_thru' => 'isPassThru',
        'min_time_to_live' => 'minTimeToLive',
        'prefix' => 'prefix',
        'server_name' => 'serverName',
        'description' => 'description',
        'base_class' => 'baseClass',
        'type' => 'type',
        'is_amazon_s3' => 'isAmazonS3',
        's3_bucket_name_ın_domain' => 's3BucketNameInDomain',
        'google_service_private_key_file' => 'googleServicePrivateKeyFile',
        'google_service_ıd' => 'googleServiceID',
        'google_service_private_key_password' => 'googleServicePrivateKeyPassword',
        'save_field_list' => 'saveFieldList',
        'azure_account_key' => 'azureAccountKey',
        'aws_secret_access_key' => 'awsSecretAccessKey',
        'azure_account_name' => 'azureAccountName',
        'aws_access_key_ıd' => 'awsAccessKeyId',
        'http_reader_factory_class' => 'httpReaderFactoryClass',
        'google_service_key' => 'googleServiceKey',
        'azure_container_name' => 'azureContainerName',
        'version' => 'version',
        'base_path' => 'basePath',
        'google_enc_method' => 'googleEncMethod',
        'name' => 'name',
        'max_time_to_live' => 'maxTimeToLive'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'reader_class' => 'setReaderClass',
        'is_pass_thru' => 'setIsPassThru',
        'min_time_to_live' => 'setMinTimeToLive',
        'prefix' => 'setPrefix',
        'server_name' => 'setServerName',
        'description' => 'setDescription',
        'base_class' => 'setBaseClass',
        'type' => 'setType',
        'is_amazon_s3' => 'setIsAmazonS3',
        's3_bucket_name_ın_domain' => 'setS3BucketNameInDomain',
        'google_service_private_key_file' => 'setGoogleServicePrivateKeyFile',
        'google_service_ıd' => 'setGoogleServiceId',
        'google_service_private_key_password' => 'setGoogleServicePrivateKeyPassword',
        'save_field_list' => 'setSaveFieldList',
        'azure_account_key' => 'setAzureAccountKey',
        'aws_secret_access_key' => 'setAwsSecretAccessKey',
        'azure_account_name' => 'setAzureAccountName',
        'aws_access_key_ıd' => 'setAwsAccessKeyId',
        'http_reader_factory_class' => 'setHttpReaderFactoryClass',
        'google_service_key' => 'setGoogleServiceKey',
        'azure_container_name' => 'setAzureContainerName',
        'version' => 'setVersion',
        'base_path' => 'setBasePath',
        'google_enc_method' => 'setGoogleEncMethod',
        'name' => 'setName',
        'max_time_to_live' => 'setMaxTimeToLive'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'reader_class' => 'getReaderClass',
        'is_pass_thru' => 'getIsPassThru',
        'min_time_to_live' => 'getMinTimeToLive',
        'prefix' => 'getPrefix',
        'server_name' => 'getServerName',
        'description' => 'getDescription',
        'base_class' => 'getBaseClass',
        'type' => 'getType',
        'is_amazon_s3' => 'getIsAmazonS3',
        's3_bucket_name_ın_domain' => 'getS3BucketNameInDomain',
        'google_service_private_key_file' => 'getGoogleServicePrivateKeyFile',
        'google_service_ıd' => 'getGoogleServiceId',
        'google_service_private_key_password' => 'getGoogleServicePrivateKeyPassword',
        'save_field_list' => 'getSaveFieldList',
        'azure_account_key' => 'getAzureAccountKey',
        'aws_secret_access_key' => 'getAwsSecretAccessKey',
        'azure_account_name' => 'getAzureAccountName',
        'aws_access_key_ıd' => 'getAwsAccessKeyId',
        'http_reader_factory_class' => 'getHttpReaderFactoryClass',
        'google_service_key' => 'getGoogleServiceKey',
        'azure_container_name' => 'getAzureContainerName',
        'version' => 'getVersion',
        'base_path' => 'getBasePath',
        'google_enc_method' => 'getGoogleEncMethod',
        'name' => 'getName',
        'max_time_to_live' => 'getMaxTimeToLive'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['reader_class'] = isset($data['reader_class']) ? $data['reader_class'] : null;
        $this->container['is_pass_thru'] = isset($data['is_pass_thru']) ? $data['is_pass_thru'] : null;
        $this->container['min_time_to_live'] = isset($data['min_time_to_live']) ? $data['min_time_to_live'] : null;
        $this->container['prefix'] = isset($data['prefix']) ? $data['prefix'] : null;
        $this->container['server_name'] = isset($data['server_name']) ? $data['server_name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['base_class'] = isset($data['base_class']) ? $data['base_class'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['is_amazon_s3'] = isset($data['is_amazon_s3']) ? $data['is_amazon_s3'] : null;
        $this->container['s3_bucket_name_ın_domain'] = isset($data['s3_bucket_name_ın_domain']) ? $data['s3_bucket_name_ın_domain'] : null;
        $this->container['google_service_private_key_file'] = isset($data['google_service_private_key_file']) ? $data['google_service_private_key_file'] : null;
        $this->container['google_service_ıd'] = isset($data['google_service_ıd']) ? $data['google_service_ıd'] : null;
        $this->container['google_service_private_key_password'] = isset($data['google_service_private_key_password']) ? $data['google_service_private_key_password'] : null;
        $this->container['save_field_list'] = isset($data['save_field_list']) ? $data['save_field_list'] : null;
        $this->container['azure_account_key'] = isset($data['azure_account_key']) ? $data['azure_account_key'] : null;
        $this->container['aws_secret_access_key'] = isset($data['aws_secret_access_key']) ? $data['aws_secret_access_key'] : null;
        $this->container['azure_account_name'] = isset($data['azure_account_name']) ? $data['azure_account_name'] : null;
        $this->container['aws_access_key_ıd'] = isset($data['aws_access_key_ıd']) ? $data['aws_access_key_ıd'] : null;
        $this->container['http_reader_factory_class'] = isset($data['http_reader_factory_class']) ? $data['http_reader_factory_class'] : null;
        $this->container['google_service_key'] = isset($data['google_service_key']) ? $data['google_service_key'] : null;
        $this->container['azure_container_name'] = isset($data['azure_container_name']) ? $data['azure_container_name'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['base_path'] = isset($data['base_path']) ? $data['base_path'] : null;
        $this->container['google_enc_method'] = isset($data['google_enc_method']) ? $data['google_enc_method'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['max_time_to_live'] = isset($data['max_time_to_live']) ? $data['max_time_to_live'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['reader_class'] === null) {
            $invalidProperties[] = "'reader_class' can't be null";
        }
        if ($this->container['is_pass_thru'] === null) {
            $invalidProperties[] = "'is_pass_thru' can't be null";
        }
        if ($this->container['min_time_to_live'] === null) {
            $invalidProperties[] = "'min_time_to_live' can't be null";
        }
        if ($this->container['prefix'] === null) {
            $invalidProperties[] = "'prefix' can't be null";
        }
        if ($this->container['server_name'] === null) {
            $invalidProperties[] = "'server_name' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['base_class'] === null) {
            $invalidProperties[] = "'base_class' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['is_amazon_s3'] === null) {
            $invalidProperties[] = "'is_amazon_s3' can't be null";
        }
        if ($this->container['s3_bucket_name_ın_domain'] === null) {
            $invalidProperties[] = "'s3_bucket_name_ın_domain' can't be null";
        }
        if ($this->container['google_service_private_key_file'] === null) {
            $invalidProperties[] = "'google_service_private_key_file' can't be null";
        }
        if ($this->container['google_service_ıd'] === null) {
            $invalidProperties[] = "'google_service_ıd' can't be null";
        }
        if ($this->container['google_service_private_key_password'] === null) {
            $invalidProperties[] = "'google_service_private_key_password' can't be null";
        }
        if ($this->container['azure_account_key'] === null) {
            $invalidProperties[] = "'azure_account_key' can't be null";
        }
        if ($this->container['aws_secret_access_key'] === null) {
            $invalidProperties[] = "'aws_secret_access_key' can't be null";
        }
        if ($this->container['azure_account_name'] === null) {
            $invalidProperties[] = "'azure_account_name' can't be null";
        }
        if ($this->container['aws_access_key_ıd'] === null) {
            $invalidProperties[] = "'aws_access_key_ıd' can't be null";
        }
        if ($this->container['http_reader_factory_class'] === null) {
            $invalidProperties[] = "'http_reader_factory_class' can't be null";
        }
        if ($this->container['google_service_key'] === null) {
            $invalidProperties[] = "'google_service_key' can't be null";
        }
        if ($this->container['azure_container_name'] === null) {
            $invalidProperties[] = "'azure_container_name' can't be null";
        }
        if ($this->container['version'] === null) {
            $invalidProperties[] = "'version' can't be null";
        }
        if ($this->container['base_path'] === null) {
            $invalidProperties[] = "'base_path' can't be null";
        }
        if ($this->container['google_enc_method'] === null) {
            $invalidProperties[] = "'google_enc_method' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['max_time_to_live'] === null) {
            $invalidProperties[] = "'max_time_to_live' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets reader_class
     *
     * @return string
     */
    public function getReaderClass()
    {
        return $this->container['reader_class'];
    }

    /**
     * Sets reader_class
     *
     * @param string $reader_class reader_class
     *
     * @return $this
     */
    public function setReaderClass($reader_class)
    {
        $this->container['reader_class'] = $reader_class;

        return $this;
    }

    /**
     * Gets is_pass_thru
     *
     * @return bool
     */
    public function getIsPassThru()
    {
        return $this->container['is_pass_thru'];
    }

    /**
     * Sets is_pass_thru
     *
     * @param bool $is_pass_thru is_pass_thru
     *
     * @return $this
     */
    public function setIsPassThru($is_pass_thru)
    {
        $this->container['is_pass_thru'] = $is_pass_thru;

        return $this;
    }

    /**
     * Gets min_time_to_live
     *
     * @return int
     */
    public function getMinTimeToLive()
    {
        return $this->container['min_time_to_live'];
    }

    /**
     * Sets min_time_to_live
     *
     * @param int $min_time_to_live min_time_to_live
     *
     * @return $this
     */
    public function setMinTimeToLive($min_time_to_live)
    {
        $this->container['min_time_to_live'] = $min_time_to_live;

        return $this;
    }

    /**
     * Gets prefix
     *
     * @return string
     */
    public function getPrefix()
    {
        return $this->container['prefix'];
    }

    /**
     * Sets prefix
     *
     * @param string $prefix prefix
     *
     * @return $this
     */
    public function setPrefix($prefix)
    {
        $this->container['prefix'] = $prefix;

        return $this;
    }

    /**
     * Gets server_name
     *
     * @return string
     */
    public function getServerName()
    {
        return $this->container['server_name'];
    }

    /**
     * Sets server_name
     *
     * @param string $server_name server_name
     *
     * @return $this
     */
    public function setServerName($server_name)
    {
        $this->container['server_name'] = $server_name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets base_class
     *
     * @return string
     */
    public function getBaseClass()
    {
        return $this->container['base_class'];
    }

    /**
     * Sets base_class
     *
     * @param string $base_class base_class
     *
     * @return $this
     */
    public function setBaseClass($base_class)
    {
        $this->container['base_class'] = $base_class;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets is_amazon_s3
     *
     * @return bool
     */
    public function getIsAmazonS3()
    {
        return $this->container['is_amazon_s3'];
    }

    /**
     * Sets is_amazon_s3
     *
     * @param bool $is_amazon_s3 is_amazon_s3
     *
     * @return $this
     */
    public function setIsAmazonS3($is_amazon_s3)
    {
        $this->container['is_amazon_s3'] = $is_amazon_s3;

        return $this;
    }

    /**
     * Gets s3_bucket_name_ın_domain
     *
     * @return bool
     */
    public function getS3BucketNameInDomain()
    {
        return $this->container['s3_bucket_name_ın_domain'];
    }

    /**
     * Sets s3_bucket_name_ın_domain
     *
     * @param bool $s3_bucket_name_ın_domain s3_bucket_name_ın_domain
     *
     * @return $this
     */
    public function setS3BucketNameInDomain($s3_bucket_name_ın_domain)
    {
        $this->container['s3_bucket_name_ın_domain'] = $s3_bucket_name_ın_domain;

        return $this;
    }

    /**
     * Gets google_service_private_key_file
     *
     * @return string
     */
    public function getGoogleServicePrivateKeyFile()
    {
        return $this->container['google_service_private_key_file'];
    }

    /**
     * Sets google_service_private_key_file
     *
     * @param string $google_service_private_key_file google_service_private_key_file
     *
     * @return $this
     */
    public function setGoogleServicePrivateKeyFile($google_service_private_key_file)
    {
        $this->container['google_service_private_key_file'] = $google_service_private_key_file;

        return $this;
    }

    /**
     * Gets google_service_ıd
     *
     * @return string
     */
    public function getGoogleServiceId()
    {
        return $this->container['google_service_ıd'];
    }

    /**
     * Sets google_service_ıd
     *
     * @param string $google_service_ıd google_service_ıd
     *
     * @return $this
     */
    public function setGoogleServiceId($google_service_ıd)
    {
        $this->container['google_service_ıd'] = $google_service_ıd;

        return $this;
    }

    /**
     * Gets google_service_private_key_password
     *
     * @return string
     */
    public function getGoogleServicePrivateKeyPassword()
    {
        return $this->container['google_service_private_key_password'];
    }

    /**
     * Sets google_service_private_key_password
     *
     * @param string $google_service_private_key_password google_service_private_key_password
     *
     * @return $this
     */
    public function setGoogleServicePrivateKeyPassword($google_service_private_key_password)
    {
        $this->container['google_service_private_key_password'] = $google_service_private_key_password;

        return $this;
    }

    /**
     * Gets save_field_list
     *
     * @return string[]
     */
    public function getSaveFieldList()
    {
        return $this->container['save_field_list'];
    }

    /**
     * Sets save_field_list
     *
     * @param string[] $save_field_list save_field_list
     *
     * @return $this
     */
    public function setSaveFieldList($save_field_list)
    {
        $this->container['save_field_list'] = $save_field_list;

        return $this;
    }

    /**
     * Gets azure_account_key
     *
     * @return string
     */
    public function getAzureAccountKey()
    {
        return $this->container['azure_account_key'];
    }

    /**
     * Sets azure_account_key
     *
     * @param string $azure_account_key azure_account_key
     *
     * @return $this
     */
    public function setAzureAccountKey($azure_account_key)
    {
        $this->container['azure_account_key'] = $azure_account_key;

        return $this;
    }

    /**
     * Gets aws_secret_access_key
     *
     * @return string
     */
    public function getAwsSecretAccessKey()
    {
        return $this->container['aws_secret_access_key'];
    }

    /**
     * Sets aws_secret_access_key
     *
     * @param string $aws_secret_access_key aws_secret_access_key
     *
     * @return $this
     */
    public function setAwsSecretAccessKey($aws_secret_access_key)
    {
        $this->container['aws_secret_access_key'] = $aws_secret_access_key;

        return $this;
    }

    /**
     * Gets azure_account_name
     *
     * @return string
     */
    public function getAzureAccountName()
    {
        return $this->container['azure_account_name'];
    }

    /**
     * Sets azure_account_name
     *
     * @param string $azure_account_name azure_account_name
     *
     * @return $this
     */
    public function setAzureAccountName($azure_account_name)
    {
        $this->container['azure_account_name'] = $azure_account_name;

        return $this;
    }

    /**
     * Gets aws_access_key_ıd
     *
     * @return string
     */
    public function getAwsAccessKeyId()
    {
        return $this->container['aws_access_key_ıd'];
    }

    /**
     * Sets aws_access_key_ıd
     *
     * @param string $aws_access_key_ıd aws_access_key_ıd
     *
     * @return $this
     */
    public function setAwsAccessKeyId($aws_access_key_ıd)
    {
        $this->container['aws_access_key_ıd'] = $aws_access_key_ıd;

        return $this;
    }

    /**
     * Gets http_reader_factory_class
     *
     * @return string
     */
    public function getHttpReaderFactoryClass()
    {
        return $this->container['http_reader_factory_class'];
    }

    /**
     * Sets http_reader_factory_class
     *
     * @param string $http_reader_factory_class http_reader_factory_class
     *
     * @return $this
     */
    public function setHttpReaderFactoryClass($http_reader_factory_class)
    {
        $this->container['http_reader_factory_class'] = $http_reader_factory_class;

        return $this;
    }

    /**
     * Gets google_service_key
     *
     * @return string
     */
    public function getGoogleServiceKey()
    {
        return $this->container['google_service_key'];
    }

    /**
     * Sets google_service_key
     *
     * @param string $google_service_key google_service_key
     *
     * @return $this
     */
    public function setGoogleServiceKey($google_service_key)
    {
        $this->container['google_service_key'] = $google_service_key;

        return $this;
    }

    /**
     * Gets azure_container_name
     *
     * @return string
     */
    public function getAzureContainerName()
    {
        return $this->container['azure_container_name'];
    }

    /**
     * Sets azure_container_name
     *
     * @param string $azure_container_name azure_container_name
     *
     * @return $this
     */
    public function setAzureContainerName($azure_container_name)
    {
        $this->container['azure_container_name'] = $azure_container_name;

        return $this;
    }

    /**
     * Gets version
     *
     * @return string
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param string $version version
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets base_path
     *
     * @return string
     */
    public function getBasePath()
    {
        return $this->container['base_path'];
    }

    /**
     * Sets base_path
     *
     * @param string $base_path base_path
     *
     * @return $this
     */
    public function setBasePath($base_path)
    {
        $this->container['base_path'] = $base_path;

        return $this;
    }

    /**
     * Gets google_enc_method
     *
     * @return string
     */
    public function getGoogleEncMethod()
    {
        return $this->container['google_enc_method'];
    }

    /**
     * Sets google_enc_method
     *
     * @param string $google_enc_method google_enc_method
     *
     * @return $this
     */
    public function setGoogleEncMethod($google_enc_method)
    {
        $this->container['google_enc_method'] = $google_enc_method;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets max_time_to_live
     *
     * @return int
     */
    public function getMaxTimeToLive()
    {
        return $this->container['max_time_to_live'];
    }

    /**
     * Sets max_time_to_live
     *
     * @param int $max_time_to_live max_time_to_live
     *
     * @return $this
     */
    public function setMaxTimeToLive($max_time_to_live)
    {
        $this->container['max_time_to_live'] = $max_time_to_live;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


